x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:

  dashboard:
    image: ghcr.io/oakestra/dashboard:latest
    pull_policy: always
    ports:
      - '80:80'
    restart: unless-stopped
    container_name: oaekstra-frontend-container
    environment:
      - API_ADDRESS=${SYSTEM_MANAGER_URL}:10000

  # System Manager REST API of Root Orchestrator
  system_manager:
    image: ghcr.io/oakestra/oakestra/root-system-manager:latest
    pull_policy: always
    hostname: system_manager
    container_name: system_manager
    labels:
      logging: "promtail"
      logging_jobname: "rootlogs"
    expose:
      - "10000"
      - "50052"
    ports:
      - "10000:10000"
      - "50052:50052"
    depends_on:
      - mongo_root
      - cloud_scheduler
      - root_service_manager
    environment:
      - CLOUD_MONGO_URL=mongo
      - CLOUD_MONGO_PORT=10007
      - CLOUD_SCHEDULER_URL=cloud_scheduler
      - CLOUD_SCHEDULER_PORT=10004
      - RESOURCE_ABSTRACTOR_URL=resource_abstractor
      - RESOURCE_ABSTRACTOR_PORT=11011
      - NET_PLUGIN_URL=root_service_manager
      - NET_PLUGIN_PORT=10099


  # MongoDB in Root Orchestrator
  mongo_root:
    image: mongo:8.0
    pull_policy: always
    container_name: mongo
    hostname: mongo
    ports:
      - "10007:10007"
    expose:
      - "10007"
    volumes:
      - 'mongodb_data:/mongodb'
    command: mongod --port 10007

  # cluster-level mongoDB
  mongo_rootnet:
    image: mongo:8.0
    pull_policy: always
    container_name: mongo_net
    hostname: mongo_net
    labels:
      logging: "promtail"
    ports:
      - "10008:10008"
    expose:
      - "10008"
    volumes:
      - 'mongodb_net_data:/mongodb'
    command: mongod --port 10008
    logging: *default-logging


  # Cluster Manager
  root_service_manager:
    image: ghcr.io/oakestra/oakestra-net/root-service-manager:latest
    pull_policy: always
    container_name: root_service_manager
    hostname: root_service_manager
    labels:
      logging: "promtail"
      logging_jobname: "rootlogs"  
    expose:
      - "10099"
    ports:
      - "10099:10099"
    environment:
      - MY_PORT=10099
      - SYSTEM_MANAGER_URL=system_manager
      - SYSTEM_MANAGER_PORT=10000
      - CLOUD_MONGO_URL=mongo_net
      - CLOUD_MONGO_PORT=10008
    depends_on:
      - mongo_rootnet
    logging: *default-logging


  # Redis for the Cloud Scheduler
  redis:
    image: redis
    pull_policy: always
    hostname: redis
    container_name: redis
    expose:
      - "6379"
    command: redis-server --requirepass cloudRedis

  resource_abstractor:
    image: ghcr.io/oakestra/oakestra/root-resource-abstractor:latest
    pull_policy: always
    container_name: resource_abstractor
    hostname: resource_abstractor
    labels:
      logging: "promtail"
      logging_jobname: "rootlogs"
    expose:
      - "11011"
    ports:
      - "11011:11011"
    environment:
      - RESOURCE_ABSTRACTOR_PORT=11011
      - CLOUD_MONGO_URL=mongo
      - CLOUD_MONGO_PORT=10007
    depends_on:
      - mongo_root
    logging: *default-logging


  # Cloud Scheduler
  cloud_scheduler:
    image: ghcr.io/oakestra/oakestra/cloud-scheduler:latest
    pull_policy: always
    container_name: cloud_scheduler
    hostname: cloud_scheduler
    labels:
      logging: "promtail"
      logging_jobname: "rootlogs"
    expose:
      - "10004"
    environment:
      - MY_PORT=10004
      - SYSTEM_MANAGER_URL=system_manager
      - SYSTEM_MANAGER_PORT=10000
      - RESOURCE_ABSTRACTOR_URL=resource_abstractor
      - RESOURCE_ABSTRACTOR_PORT=11011
      - REDIS_ADDR=redis://:cloudRedis@redis:6379
      - CLOUD_MONGO_URL=mongo #adding this for consistency with version 0.4.300
      - CLOUD_MONGO_PORT=10007 #adding this for consistency with version 0.4.300
    depends_on:
      - redis
      - resource_abstractor
    logging: *default-logging


  # MQTT
  mqtt:
    image: eclipse-mosquitto:1.6
    pull_policy: always
    hostname: mqtt
    container_name: mqtt
    expose:
      - "10003"
    ports:
      - "10003:10003"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /mosquitto/data
      - /mosquitto/log
    healthcheck:
      test: [ "CMD-SHELL", "timeout -t 5 mosquitto_sub -t '$$SYS/#' -C 1 | grep -v Error || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 6


  # cluster-level mongoDB
  mongo_cluster:
    image: mongo:8.0
    pull_policy: always
    container_name: cluster_mongo
    hostname: cluster_mongo
    ports:
      - "10107:10107"
    expose:
      - "10107"
    volumes:
      - 'mongodb_cluster_data:/mongodb'
    command: mongod --port 10107

  # cluster-level mongoDB
  mongo_clusternet:
    image: mongo:8.0
    pull_policy: always
    container_name: cluster_mongo_net
    hostname: cluster_mongo_net
    ports:
      - "10108:10108"
    expose:
      - "10108"
    volumes:
      - 'mongodb_cluster_net_data:/mongodb'
    command: mongod --port 10108


  # Cluster Manager
  cluster_service_manager:
    image: ghcr.io/oakestra/oakestra-net/cluster-service-manager:latest
    pull_policy: always
    container_name: cluster_service_manager
    hostname: cluster_service_manager
    labels:
      logging: "promtail"
      logging_jobname: "clusterlogs"
    expose:
      - "10110"
    ports:
      - "10110:10110"
    environment:
      - MY_PORT=10110
      - MQTT_BROKER_PORT=10003
      - MQTT_BROKER_URL=mqtt
      - ROOT_SERVICE_MANAGER_URL=${SYSTEM_MANAGER_URL}
      - ROOT_SERVICE_MANAGER_PORT=10099
      - SYSTEM_MANAGER_URL=cluster_manager
      - SYSTEM_MANAGER_PORT=10000
      - CLUSTER_MONGO_URL=cluster_mongo_net
      - CLUSTER_MONGO_PORT=10108
    depends_on:
      - mongo_clusternet
      - mqtt
    logging: *default-logging

  # Cluster Manager
  cluster_manager:
    image: ghcr.io/oakestra/oakestra/cluster-manager:latest
    pull_policy: always
    container_name: cluster_manager
    hostname: cluster_manager
    expose:
      - "10100"
      - "10101"
    ports:
      - "10100:10100"
      - "10101:10101"
    command: bash -c 'sleep 15; python cluster_manager.py'
    labels:
      logging: "promtail"
      logging_jobname: "clusterlogs"
    environment:
      - MY_PORT=10100
      - SYSTEM_MANAGER_URL=${SYSTEM_MANAGER_URL}
      - SYSTEM_MANAGER_PORT=10000
      - CLUSTER_SERVICE_MANAGER_ADDR=cluster_service_manager
      - CLUSTER_SERVICE_MANAGER_PORT=10110
      - CLUSTER_MONGO_URL=cluster_mongo
      - CLUSTER_MONGO_PORT=10107
      - CLUSTER_SCHEDULER_URL=cluster_scheduler
      - CLUSTER_SCHEDULER_PORT=10105
      - MQTT_BROKER_URL=mqtt
      - MQTT_BROKER_PORT=10003
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_LOCATION=${CLUSTER_LOCATION}
    depends_on:
      - mongo_cluster
      - mqtt
      - cluster_scheduler
      - cluster_service_manager
      - system_manager
    logging: *default-logging


  # Cluster Scheduler
  cluster_scheduler:
    image: ghcr.io/oakestra/oakestra/cluster-scheduler:latest
    pull_policy: always
    container_name: cluster_scheduler
    hostname: cluster_scheduler
    labels:
      logging: "promtail"
      logging_jobname: "clusterlogs"
    expose:
      - "10105"
    environment:
      - MY_PORT=10105
      - CLUSTER_MANAGER_URL=cluster_manager
      - CLUSTER_MANAGER_PORT=10100
      - CLUSTER_MONGO_URL=cluster_mongo
      - CLUSTER_MONGO_PORT=10107
      - REDIS_ADDR=redis://:clusterRedis@cluster_redis:6479
    depends_on:
      - cluster_redis
      - mongo_cluster
    logging: *default-logging


  # Redis for the Cluster Scheduler as Job Queue
  cluster_redis:
    image: redis
    pull_policy: always
    hostname: cluster_redis
    container_name: cluster_redis
    expose:
      - "6479"
    command: redis-server --requirepass clusterRedis --port 6479


  prometheus:
    image: prom/prometheus
    pull_policy: always
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - cluster_manager
  

  # Observability Stack (Promtail, Loki, Grafana)
  grafana:
    image: grafana/grafana
    pull_policy: always
    hostname: grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./config/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./config/dashboards:/var/lib/grafana/dashboards
    logging: *default-logging


  loki:
    container_name: loki
    pull_policy: always
    image: grafana/loki:2.9.2
    ports:
      - 3100:3100
    volumes:
      - ./config/loki.yml:/etc/loki/config.yml
      - ./config/alerts/rules.yml:/etc/loki/rules/fake/rules.yml

    command: -config.file=/etc/loki/config.yml


  promtail:
    image: grafana/promtail:2.9.2
    pull_policy: always
    container_name: promtail
    volumes:
      - ./config/promtail.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
      - '--config.file=/etc/promtail/config.yml'
      - '--server.enable-runtime-reload'
    depends_on:
      - loki
    logging: *default-logging

volumes:
  mongodb_data:
    driver: local
  mongodb_net_data:
    driver: local
  mongodb_cluster_data:
    driver: local
  mongodb_cluster_net_data:
    driver: local
  

networks:
  default:
    name: oakestra
  ip6net:
    enable_ipv6: true
